import org.gradle.plugins.signing.Sign
import org.gradle.api.publish.maven.tasks.PublishToMavenRepository

plugins {
    id 'java-platform'
}

allprojects {
    group = 'io.github.sahinemirhan'
    version = '0.0.1'

    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/release" }
    }

}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    group = rootProject.group
    version = rootProject.version

    def signingKey = project.findProperty("signingKey") ?: System.getenv("SIGNING_KEY")
    def signingPassword = project.findProperty("signingPassword") ?: System.getenv("SIGNING_PASSWORD")
    def ossrhUsername = project.findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
    def ossrhPassword = project.findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")

    java {
        withSourcesJar()
        withJavadocJar()
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    repositories {
        mavenCentral()
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java

                pom {
                    name.set(project.name)
                    description.set("Sprisk Engine module: ${project.name}")
                    url.set("https://github.com/sahinemirhan/sprisk-engine")

                    licenses {
                        license {
                            name.set("MIT License")
                            url.set("https://opensource.org/licenses/MIT")
                        }
                    }

                    developers {
                        developer {
                            id.set("emirhan")
                            name.set("Emirhan Åžahin")
                            url.set("https://github.com/sahinemirhan")
                        }
                    }

                    scm {
                        connection.set("scm:git:git://github.com/sahinemirhan/sprisk-engine.git")
                        developerConnection.set("scm:git:ssh://github.com:sahinemirhan/sprisk-engine.git")
                        url.set("https://github.com/sahinemirhan/sprisk-engine")
                    }
                }
            }
        }

        repositories {
            if (ossrhUsername && ossrhPassword) {
                maven {
                    name = "OSSRH"
                    url = version.endsWith("SNAPSHOT")
                            ? uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")
                            : uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")

                    credentials {
                        username = ossrhUsername
                        password = ossrhPassword
                    }
                }
            }
        }
    }

    signing {
        required { signingKey && signingPassword }
        if (signingKey && signingPassword) {
            useInMemoryPgpKeys(signingKey, signingPassword)
            sign publishing.publications.mavenJava
        }
    }

    tasks.withType(Sign).configureEach {
        onlyIf { signingKey && signingPassword }
    }

    tasks.withType(PublishToMavenRepository).configureEach {
        onlyIf { ossrhUsername && ossrhPassword }
    }
}
