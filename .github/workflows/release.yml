name: Release to Maven Central

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    name: Publish libraries to Maven Central

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant Gradle wrapper execute permission
        run: chmod +x gradlew

      - name: Publish modules to local repository
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean build publishToMavenLocal
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Package artifacts for Central Portal
        run: |
          set -euo pipefail
          BASE_REPO="$HOME/.m2/repository/io/github/sahinemirhan"

          if [[ ! -d "$BASE_REPO/sprisk-engine-core" ]]; then
            echo "Core artifacts not found under $BASE_REPO/sprisk-engine-core" >&2
            exit 1
          fi

          VERSION=$(ls "$BASE_REPO/sprisk-engine-core" | sort -V | tail -n 1)
          if [[ -z "${VERSION}" ]]; then
            echo "Failed to resolve version from local Maven repository" >&2
            exit 1
          fi

          GROUP_PATH="io/github/sahinemirhan"
          MODULES=("sprisk-engine-core" "sprisk-engine-starter")
          echo "Resolved release version: $VERSION"
          echo "release_version=$VERSION" >> "$GITHUB_ENV"

          BUNDLE_ROOT="$RUNNER_TEMP/central-bundle"
          mkdir -p "$BUNDLE_ROOT/$GROUP_PATH"

          for module in "${MODULES[@]}"; do
            SRC="$BASE_REPO/$module/$VERSION"
            if [[ ! -d "$SRC" ]]; then
              echo "Artifacts for $module $VERSION not found at $SRC" >&2
              exit 1
            fi
            DEST_DIR="$BUNDLE_ROOT/$GROUP_PATH/$module/$VERSION"
            mkdir -p "$(dirname "$DEST_DIR")"
            cp -R "$SRC" "$DEST_DIR"

            find "$DEST_DIR" -type f ! -name '*.md5' ! -name '*.sha1' ! -name '*.sha256' ! -name '*.sha512' -print0 | while IFS= read -r -d '' file; do
              sha1sum "$file" | awk '{print $1}' > "${file}.sha1"
              sha256sum "$file" | awk '{print $1}' > "${file}.sha256"
              sha512sum "$file" | awk '{print $1}' > "${file}.sha512"
            done
          done

          (cd "$BUNDLE_ROOT" && zip -r "$RUNNER_TEMP/sprisk-engine-${VERSION}.zip" "$GROUP_PATH")
          echo "bundle_path=$RUNNER_TEMP/sprisk-engine-${VERSION}.zip" >> "$GITHUB_ENV"

      - name: Upload bundle to Central Portal
        env:
          CENTRAL_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
          CENTRAL_PASSWORD: ${{ secrets.CENTRAL_PASSWORD }}
          BUNDLE_PATH: ${{ env.bundle_path }}
        run: |
          set -euo pipefail
          if [[ -z "${BUNDLE_PATH}" || ! -f "${BUNDLE_PATH}" ]]; then
            echo "Bundle not found at ${BUNDLE_PATH}" >&2
            exit 1
          fi
          curl -u "${CENTRAL_USERNAME}:${CENTRAL_PASSWORD}" \
               -F "bundle=@${BUNDLE_PATH}" \
               -F "publishingType=AUTOMATIC" \
               https://central.sonatype.com/api/v1/publisher/upload
